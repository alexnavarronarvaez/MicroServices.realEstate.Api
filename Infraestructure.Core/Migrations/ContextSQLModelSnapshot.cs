// <auto-generated />
using System;
using Infraestructure.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infraestructure.Core.Migrations
{
    [DbContext(typeof(ContextSQL))]
    partial class ContextSQLModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infraestructure.Entity.Entities.OwnerEntity", b =>
                {
                    b.Property<int>("IdOwner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdOwner")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOwner")
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("Address");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("Birthday");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("CreationDate");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("ModificationDate");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOwner")
                        .HasColumnType("varchar(400)")
                        .HasColumnName("Name");

                    b.Property<string>("Photo")
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("Photo");

                    b.HasKey("IdOwner");

                    b.ToTable("Owner", "dbo");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.PropertyEntity", b =>
                {
                    b.Property<int>("IdProperty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProperty")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressProperty")
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("Address");

                    b.Property<string>("CodeInternational")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CodeInternational");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("CreationDate");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOwner")
                        .HasColumnType("int")
                        .HasColumnName("IdOwner");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("ModificationDate");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameProperty")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(22,4)")
                        .HasColumnName("Price");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("IdProperty");

                    b.HasIndex("IdOwner");

                    b.ToTable("Property", "dbo");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.PropertyImageEntity", b =>
                {
                    b.Property<int>("IdPropertyImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPropertyImage")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("Enabled");

                    b.Property<string>("File")
                        .HasColumnType("varchar(MAX)")
                        .HasColumnName("File");

                    b.Property<int>("IdProperty")
                        .HasColumnType("int")
                        .HasColumnName("IdProperty");

                    b.Property<string>("TypeFile")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TypeFile");

                    b.HasKey("IdPropertyImage");

                    b.HasIndex("IdProperty");

                    b.ToTable("PropertyImage", "dbo");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.PropertyTraceEntity", b =>
                {
                    b.Property<int>("IdPropertyTrace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPropertyTrace")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("CreationDate");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProperty")
                        .HasColumnType("int")
                        .HasColumnName("IdProperty");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("ModificationDate");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamePropertyTrace")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(22,4)")
                        .HasColumnName("Tax");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(22,4)")
                        .HasColumnName("Value");

                    b.HasKey("IdPropertyTrace");

                    b.HasIndex("IdProperty");

                    b.ToTable("PropertyTrace", "dbo");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.PropertyEntity", b =>
                {
                    b.HasOne("Infraestructure.Entity.Entities.OwnerEntity", "ownerEntity")
                        .WithMany()
                        .HasForeignKey("IdOwner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ownerEntity");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.PropertyImageEntity", b =>
                {
                    b.HasOne("Infraestructure.Entity.Entities.PropertyEntity", "propertyEntity")
                        .WithMany()
                        .HasForeignKey("IdProperty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("propertyEntity");
                });

            modelBuilder.Entity("Infraestructure.Entity.Entities.PropertyTraceEntity", b =>
                {
                    b.HasOne("Infraestructure.Entity.Entities.PropertyEntity", "propertyEntity")
                        .WithMany()
                        .HasForeignKey("IdProperty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("propertyEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
